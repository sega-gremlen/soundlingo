import React, {useEffect, useRef, useState} from "react";
import {Progress} from 'antd';
import WaveSurfer from "wavesurfer.js";

const formWaveSurferOptions = (ref) => ({
    container: ref,
    waveColor: "#eee",
    progressColor: "rgb(0,0,0)",
    cursorColor: "Black",
    barWidth: 3,
    barRadius: 1,
    responsive: true,
    height: 50,
    normalize: true,
    partialRender: true,
    backend: 'MediaElement',
    mediaControls: false,
    peaks: [[0.00036646920489147305,
        0.0005386605625972152,
        0.0006105545326136053,
        0.0006767723825760186,
        0.0008772416040301323,
        0.0006244632531888783,
        0.0006476786802522838,
        0.0006519858725368977,
        0.0008079499821178615,
        0.0005789092974737287,
        0.000595149933360517,
        0.0005527700413949788,
        0.0006726161809638143,
        0.0009371525375172496,
        0.0006649530259892344,
        0.0007676759269088507,
        0.000602806219831109,
        0.0006333851488307118,
        0.0005372259765863419,
        0.0006812600186094642,
        0.0007385262288153172,
        0.0007207427406683564,
        0.000494806154165417,
        0.00048052368219941854,
        0.0008978631813079119,
        0.00118248222861439,
        0.001309210667386651,
        0.0008502857526764274,
        0.0006562007474713027,
        0.0023851445876061916,
        0.0019070260459557176,
        0.002290136180818081,
        0.006014537997543812,
        0.21374690532684326,
        0.2187504768371582,
        0.010060497559607029,
        0.021895255893468857,
        0.034073859453201294,
        0.21751010417938232,
        0.03459303081035614,
        0.040153101086616516,
        0.21323436498641968,
        0.15814310312271118,
        0.12683720886707306,
        0.1351773887872696,
        0.12712328135967255,
        0.24430766701698303,
        0.13896682858467102,
        0.04765555262565613,
        0.09425213187932968,
        0.20558027923107147,
        0.2322731912136078,
        0.008197320625185966,
        0.012277576141059399,
        0.1513325721025467,
        0.22153638303279877,
        0.006369465030729771,
        0.021976439282298088,
        0.1759958267211914,
        0.2423248440027237,
        0.06190077215433121,
        0.22327962517738342,
        0.19057494401931763,
        0.13727957010269165,
        0.04019870609045029,
        0.0357198640704155,
        0.17343918979167938,
        0.19508111476898193,
        0.027277737855911255,
        0.012721190229058266,
        0.02388160116970539,
        0.21524962782859802,
        0.032490767538547516,
        0.027123188599944115,
        0.2017853707075119,
        0.1127392053604126,
        0.158026784658432,
        0.0691598653793335,
        0.03300436586141586,
        0.1724853813648224,
        0.21391062438488007,
        0.03540151193737984,
        0.07470844686031342,
        0.14636486768722534,
        0.19149108231067657,
        0.016592474654316902,
        0.016299203038215637,
        0.15629802644252777,
        0.21511457860469818,
        0.011033645831048489,
        0.026275910437107086,
        0.17605695128440857,
        0.17069971561431885,
        0.051571719348430634,
        0.035428486764431,
        0.14659416675567627,
        0.2073698341846466,
        0.1691470444202423,
        0.030078407377004623,
        0.27446383237838745,
        0.06859254091978073,
        0.2953054904937744,
        0.2877429723739624,
        0.07617269456386566,
        0.19750739634037018,
        0.20005738735198975,
        0.21930959820747375,
        0.3088809847831726,
        0.1718563288450241,
        0.21182730793952942,
        0.2742229104042053,
        0.25006890296936035,
        0.16426168382167816,
        0.18503782153129578,
        0.33983123302459717,
        0.06698617339134216,
        0.3332885801792145,
        0.20206353068351746,
        0.03696433827280998,
        0.21529023349285126,
        0.22066853940486908,
        0.28127428889274597,
        0.1751071810722351,
        0.06676075607538223,
        0.2982605993747711,
        0.19672949612140656,
        0.1636098474264145,
        0.2287953495979309,
        0.1108078807592392,
        0.16657595336437225,
        0.11879100650548935,
        0.32772576808929443,
        0.3211553692817688,
        0.07767508924007416,
        0.29270970821380615,
        0.31881386041641235,
        0.1646631360054016,
        0.15005061030387878,
        0.17227691411972046,
        0.22846418619155884,
        0.30332013964653015,
        0.19936642050743103,
        0.23551718890666962,
        0.23461826145648956,
        0.24626685678958893,
        0.2063065469264984,
        0.23362046480178833,
        0.3818643093109131,
        0.09752306342124939,
        0.28626877069473267,
        0.2336704581975937,
        0.12329679727554321,
        0.34947773814201355,
        0.13731467723846436,
        0.16571763157844543,
        0.22745490074157715,
        0.1842859834432602,
        0.3308899402618408,
        0.08995391428470612,
        0.14483408629894257,
        0.15556064248085022,
        0.04557149484753609,
        0.19462896883487701,
        0.15160423517227173,
        0.23496684432029724,
        0.25091785192489624,
        0.06734897196292877,
        0.012223743833601475,
        0.008361345157027245,
        0.0105117317289114,
        0.008395661599934101,
        0.021966034546494484,
        0.014563030563294888,
        0.024050982668995857,
        0.032673429697752,
        0.05098754167556763,
        0.048808202147483826,
        0.033817291259765625,
        0.04723759740591049,
        0.06009324640035629,
        0.06350061297416687,
        0.05949351564049721,
        0.03227692469954491,
        0.009107113815844059,
        0.009344943799078465,
        0.008024925366044044,
        0.008157111704349518,
        0.007451968267560005,
        0.010904686525464058,
        0.013753209263086319,
        0.028090445324778557,
        0.04293958097696304,
        0.049826160073280334,
        0.050891708582639694,
        0.039726145565509796,
        0.05267922580242157,
        0.06308217346668243,
        0.05836958810687065,
        0.3601049482822418,
        0.3254401683807373,
        0.21547332406044006,
        0.015568680129945278,
        0.1480114609003067,
        0.22364391386508942,
        0.25681230425834656,
        0.01422316487878561,
        0.09716019779443741,
        0.2680918872356415,
        0.3110095262527466,
        0.025054190307855606,
        0.2252725511789322,
        0.21909081935882568,
        0.28616493940353394,
        0.017504090443253517,
        0.15431582927703857,
        0.2468751221895218,
        0.26188793778419495,
        0.01778055727481842,
        0.01890414208173752,
        0.20211003720760345,
        0.30734825134277344,
        0.027566786855459213,
        0.014240346848964691,
        0.24563798308372498,
        0.23676170408725739,
        0.06818296015262604,
        0.25612181425094604,
        0.17213575541973114,
        0.28931277990341187,
        0.23048774898052216,
        0.14950446784496307,
        0.29510948061943054,
        0.23503032326698303,
        0.1518976241350174,
        0.20070971548557281,
        0.26285064220428467,
        0.17243731021881104,
        0.19506342709064484,
        0.24125219881534576,
        0.06286699324846268,
        0.27830076217651367,
        0.2534647285938263,
        0.08624817430973053,
        0.35239383578300476,
        0.16599608957767487,
        0.1813715100288391,
        0.33183103799819946,
        0.21259617805480957,
        0.3108443319797516,
        0.17940619587898254,
        0.18038496375083923,
        0.3243350684642792,
        0.07325276732444763,
        0.1548672318458557,
        0.1694629192352295,
        0.15791448950767517,
        0.32016581296920776,
        0.07474713027477264,
        0.19969043135643005,
        0.30812638998031616,
        0.1848994493484497,
        0.16653293371200562,
        0.11719641834497452,
        0.17503462731838226,
        0.3212064206600189,
        0.27997079491615295,
        0.31689417362213135,
        0.17276079952716827,
        0.2452048510313034,
        0.1819000244140625,
        0.2840815484523773,
        0.2901691794395447,
        0.05945275351405144,
        0.20050421357154846,
        0.29223906993865967,
        0.12349702417850494,
        0.3443424105644226,
        0.19238370656967163,
        0.14662599563598633,
        0.21499796211719513,
        0.2077460139989853,
        0.36508435010910034,
        0.20746588706970215,
        0.19576111435890198,
        0.34928804636001587,
        0.054356396198272705,
        0.15709079802036285,
        0.15069499611854553,
        0.26121631264686584,
        0.33546310663223267,
        0.12960666418075562,
        0.11591172218322754,
        0.10468967258930206,
        0.24922050535678864,
        0.1638912558555603,
        0.2591680884361267,
        0.398600697517395,
        0.21085402369499207,
        0.2556280791759491,
        0.16899463534355164,
        0.1349068284034729,
        0.3250470757484436,
        0.13853058218955994,
        0.21154645085334778,
        0.13318760693073273,
        0.11666328459978104,
        0.28650879859924316,
        0.1290816366672516,
        0.11024707555770874,
        0.15149106085300446,
        0.17301732301712036,
        0.21014449000358582,
        0.1325237900018692,
        0.1515168994665146,
        0.2211630642414093,
        0.1645558774471283,
        0.20784343779087067,
        0.28327107429504395,
        0.12177197635173798,
        0.29563838243484497,
        0.15996220707893372,
        0.20854833722114563,
        0.22185108065605164,
        0.17794036865234375,
        0.15232422947883606,
        0.17220836877822876,
        0.15052945911884308,
        0.14238403737545013,
        0.17509374022483826,
        0.1516284942626953,
        0.12662047147750854,
        0.15865939855575562,
        0.21237733960151672,
        0.11944371461868286,
        0.24000564217567444,
        0.12170330435037613,
        0.17714232206344604,
        0.12416718900203705,
        0.17030949890613556,
        0.2847123444080353,
        0.1423042267560959,
        0.19847187399864197,
        0.20267760753631592,
        0.17951716482639313,
        0.17017486691474915,
        0.20977121591567993,
        0.18886108696460724,
        0.26477479934692383,
        0.16723434627056122,
        0.2073596715927124,
        0.22298279404640198,
        0.17802034318447113,
        0.18446758389472961,
        0.20549997687339783,
        0.17782212793827057,
        0.2852265238761902,
        0.1763603389263153,
        0.1908426582813263,
        0.20705774426460266,
        0.14098380506038666,
        0.272558331489563,
        0.19701877236366272,
        0.1841023564338684,
        0.0782172828912735,
        0.24247753620147705,
        0.01230025477707386,
        0.012502692639827728,
        0.014290550723671913,
        0.013253706507384777,
        0.010782338678836823,
        0.011045631021261215,
        0.006176692899316549,
        0.0064315092749893665,
        0.004063607659190893,
        0.003585326485335827,
        0.002143493853509426,
        0.0015862303553149104,
        0.0018668216653168201,
        0.005146860145032406,
        0.003129786578938365,
        0.0016908200923353434,
        0.0019789475481957197,
        0.003349032485857606,
        0.004562241956591606,
        0.004282589536160231,
        0.0030885227024555206,
        0.004732687026262283,
        0.00922158919274807,
        0.0055820452980697155,
        0.004265566356480122,
        0.003716331673786044,
        0.0049866000190377235,
        0.003518659621477127,
        0.003350574290379882,
        0.18236057460308075,
        0.3194355368614197,
        0.23306947946548462,
        0.3550650477409363,
        0.27978062629699707,
        0.1503274142742157,
        0.24912503361701965,
        0.1533554047346115,
        0.22953040897846222,
        0.2994999885559082,
        0.22767624258995056,
        0.4035756289958954,
        0.13741996884346008,
        0.28685712814331055,
        0.3226596713066101,
        0.08114089071750641,
        0.17291702330112457,
        0.2296772301197052,
        0.3325350880622864,
        0.2643616497516632,
        0.21030500531196594,
        0.21474158763885498,
        0.31642889976501465,
        0.1897597461938858,
        0.26921677589416504,
        0.20270442962646484,
        0.34291577339172363,
        0.15200458467006683,
        0.39269113540649414,
        0.23627784848213196,
        0.038348957896232605,
        0.23415625095367432,
        0.1603810340166092,
        0.2271466851234436,
        0.19266898930072784,
        0.1523243486881256,
        0.2647130787372589,
        0.17969751358032227,
        0.20820868015289307,
        0.20384952425956726,
        0.14545390009880066,
        0.2017957866191864,
        0.28852736949920654,
        0.14379599690437317,
        0.2388814240694046,
        0.16328446567058563,
        0.18480496108531952,
        0.2881786525249481,
        0.1448405683040619,
        0.11314787715673447,
        0.16489194333553314,
        0.163077712059021,
        0.3260890245437622,
        0.18911723792552948,
        0.29877594113349915,
        0.20692938566207886,
        0.27252018451690674,
        0.15164798498153687,
        0.2533494532108307,
        0.21292906999588013,
        0.12880972027778625,
        0.1933564841747284,
        0.22993282973766327,
        0.17380960285663605,
        0.19104374945163727,
        0.15270450711250305,
        0.15891307592391968,
        0.2892816960811615,
        0.1872359812259674,
        0.26941198110580444,
        0.06808274239301682,
        0.015845883637666702,
        0.01594073884189129,
        0.01567871682345867,
        0.018412452191114426,
        0.01741311326622963,
        0.015504622831940651,
        0.013889106921851635,
        0.010584239847958088,
        0.005232039373368025,
        0.006202396936714649,
        0.006156189367175102,
        0.004083757288753986,
        0.004742956254631281,
        0.004383052233606577,
        0.0023663886822760105,
        0.0026146462187170982,
        0.00278944568708539,
        0.0035488884896039963,
        0.003267453983426094,
        0.002579235704615712,
        0.002097661606967449,
        0.002277654828503728,
        0.0018874782836064696,
        0.0020306550431996584,
        0.0023943737614899874,
        0.002094625262543559,
        0.0015395445516332984,
        0.000715730944648385,
        0.0012276910711079836,
        0.0009828343754634261,
        0.0003516178985591978,
        0.00038269872311502695,
        4.7610217734472826e-05,
        3.025458863703534e-05,
        2.8827513233409263e-05],]
});

const formatTime = (seconds) => {
    const mins = Math.floor(seconds / 60);
    const secs = Math.floor(seconds % 60);
    return `${mins}:${secs.toString().padStart(2, "0")}`;
};

export default function MyNewAudioPlayer({title, artist, albumCover, audioSrc, revealModeHandler}) {
    const waveformRef = useRef(null);
    const wavesurfer = useRef(null);
    const [playing, setPlay] = useState(false);
    const [volume, setVolume] = useState(0.5);
    const [currentTime, setCurrentTime] = useState(0);
    const [duration, setDuration] = useState(0);
    const [isLoading, setIsLoading] = useState(true); // Добавляем состояние загрузки
    const [loadingProgress, setLoadingProgress] = useState(0); // Прогресс загрузки

    const ProgressBarWithPercentage = ({percent}) => {
        return (
            <Progress
                percent={percent} // Текущий прогресс
                strokeColor={{
                    '0%': '#108ee9',
                    '100%': '#87d068',
                }}
                format={(percent) => `${percent}%`} // Отображение процентов
            />
        );
    };

    useEffect(() => {
        setPlay(false);
        setIsLoading(true);
        setLoadingProgress(0);

        const options = formWaveSurferOptions(waveformRef.current);
        wavesurfer.current = WaveSurfer.create(options);

        // wavesurfer.current.load(audioSrc);

        wavesurfer.current.on("ready", () => {
            if (wavesurfer.current) {
                setDuration(wavesurfer.current.getDuration());
                wavesurfer.current.setVolume(volume);
                setIsLoading(false);
            }
        });

        // Обновляем текущее время во время воспроизведения
        wavesurfer.current.on("audioprocess", () => {
            if (wavesurfer.current && wavesurfer.current.isPlaying()) {
                setCurrentTime(wavesurfer.current.getCurrentTime());
            }
        });

        // Обновляем текущее время при клике на waveform
        wavesurfer.current.on("click", () => {
            if (wavesurfer.current) {
                setCurrentTime(wavesurfer.current.getCurrentTime());
            }
        });

        // Спин на загрузку
        wavesurfer.current.on("loading", (percent) => {
            console.log(`Loading: ${percent}%`);
            setLoadingProgress(percent); // Обновляем прогресс загрузки

        });

        // Используем setInterval для обновления времени при перемещении курсора
        const interval = setInterval(() => {
            if (wavesurfer.current && !wavesurfer.current.isPlaying()) {
                setCurrentTime(wavesurfer.current.getCurrentTime());
            }
        }, 100); // Обновляем каждые 100 мс

        return () => {
            wavesurfer.current.destroy();
            clearInterval(interval); // Очищаем интервал при размонтировании компонента
        };
    }, [audioSrc]);

    const handlePlayPause = () => {
        setPlay(!playing);
        wavesurfer.current.playPause();
    };

    const onVolumeChange = (e) => {
        const {target} = e;
        const newVolume = +target.value;

        if (newVolume) {
            setVolume(newVolume);
            wavesurfer.current.setVolume(newVolume || 1);
        }
    };

    return (
        <>
            {/* Таймлайн */}
            <div style={{
                width: "100%",
                position: 'sticky',
                top: 15,
                zIndex: 5,
                backgroundColor: '#ffffff',
                margin: 0,
                padding: 0,
            }}>
                {/* Контейнер для waveform и прогресс-бара */}
                <div style={{position: 'relative', height: '50px'}}>
                    {/* Вейвформа (всегда в DOM) */}
                    <div
                        style={{height: "50px"}}
                        id="waveform"
                        ref={waveformRef}
                    />

                    {/*/!* Прогресс-бар поверх waveform *!/*/}
                    {/*{isLoading && (*/}
                    {/*    <div style={{*/}
                    {/*        width: '100px',*/}
                    {/*        position: 'absolute',*/}
                    {/*        top: 0,*/}
                    {/*        left: 0,*/}
                    {/*        right: 0,*/}
                    {/*        bottom: 0,*/}
                    {/*        display: 'flex',*/}
                    {/*        alignItems: 'center',*/}
                    {/*        textAlign: "center",*/}
                    {/*        alignContent: "center",*/}
                    {/*        justifyItems: "center",*/}
                    {/*        justifyContent: 'center',*/}
                    {/*        backgroundColor: 'white' // Фон, чтобы скрыть waveform*/}
                    {/*    }}>*/}
                    {/*        <Progress*/}
                    {/*            percent={loadingProgress}*/}
                    {/*            strokeColor={{*/}
                    {/*                '0%': '#108ee9',*/}
                    {/*                '100%': '#87d068',*/}
                    {/*            }}*/}
                    {/*            format={(percent) => `${percent}%`}*/}
                    {/*        />*/}
                    {/*    </div>*/}
                    {/*)}*/}
                </div>

                {/* Текущее время */}
                <div
                    style={{
                        zIndex: "6",
                        position: "absolute",
                        bottom: "4px",
                        left: "0",
                        backgroundColor: "black",
                        color: "white",
                        padding: "1px 2px",
                        fontSize: "12px",
                    }}
                >
                    {formatTime(currentTime)}
                </div>
                {/* Общее время */}
                <div
                    style={{
                        zIndex: "6",
                        position: "absolute",
                        bottom: "4px",
                        right: "0",
                        backgroundColor: "Black",
                        color: "white",
                        padding: "1px 2px",
                        fontSize: "12px",
                    }}
                >
                    {formatTime(duration)}
                </div>

                {/* Верх подчеркивание */}
                <div style={{
                    display: "flex",
                    borderBottom: "1px solid #ddd",
                    marginTop: "4px",
                    marginBottom: "4px",
                }}></div>
            </div>

            {/* Заглушка */}
            {/*<div*/}
            {/*    style={{*/}
            {/*        // marginTop: "4px",*/}
            {/*        width: "100%",*/}
            {/*        height: "10px",*/}
            {/*        bottom: "4px",*/}
            {/*        position: 'sticky',*/}
            {/*        top: 75,*/}
            {/*        zIndex: 6,*/}
            {/*        backgroundColor: "white",*/}
            {/*        display: "flex",*/}
            {/*        flexDirection: "column",*/}
            {/*        maxWidth: "50%",*/}
            {/*        margin: "0 auto",*/}
            {/*        boxSizing: "border-box",*/}
            {/*        minWidth: "550px"*/}
            {/*    }}>*/}
            {/*</div>*/}

            {/* Междулинье */}
            <div
                style={{
                    // marginTop: "4px",
                    position: 'sticky',
                    top: 74,
                    zIndex: 5,
                    backgroundColor: '#ffffff',
                    display: "flex",
                    flexDirection: "column",
                    // maxWidth: "50%",
                    margin: "0 auto",
                    boxSizing: "border-box",
                    maxWidth: "800px",
                    minWidth: "300px",
                    width: "100%",
                    // margin: 0,
                    padding: 0,
                }}>

                <div style={{
                    display: "flex",
                    flex: 1,
                    justifyContent: "space-between",
                    flexDirection: "row",
                    position: "relative",
                }}>
                    <div style={{display: "flex", alignItems: "center", flexShrink: 0}}>
                        {/* Изображение */}
                        <img
                            style={{width: "80px", height: "80px", marginRight: "5px"}}
                            src={albumCover}
                            alt={title}
                        />
                        <div style={{
                            alignItems: "center",
                            justifyItems: "center",
                            maxWidth: "280px"
                        }}>
                            {/* Название трека */}
                            <h3 style={{
                                fontSize: "18px",
                                fontWeight: "bold",
                                // whiteSpace: "nowrap",
                                overflow: "hidden",
                                textOverflow: "ellipsis",
                            }}>{title}</h3>
                            {/* Имя артиста */}
                            <p style={{
                                fontSize: "16px",
                                overflow: "hidden",
                                textOverflow: "ellipsis",
                            }}>{artist}</p>
                        </div>
                    </div>

                    {/* Кнопка play */}
                    <div style={{
                        display: "flex",
                        position: "absolute",
                        left: "50%",
                        top: "50%",
                        transform: "translate(-50%, -50%)",
                    }}>
                        <button
                            style={{cursor: "pointer"}}
                            onClick={handlePlayPause}
                        >
                            {!playing ? (
                                <img
                                    src="/play.png"
                                    alt="Play"
                                    style={{width: "60px", height: "60px"}}
                                />
                            ) : (
                                <img
                                    src="/pause.png"
                                    alt="Pause"
                                    style={{width: "60px", height: "60px"}}
                                />
                            )}
                        </button>
                    </div>

                    {/* Кнопка magic */}
                    <div style={{
                        display: "flex",
                        position: "absolute",
                        left: "62%",
                        top: "50%",
                        transform: "translate(-50%, -50%)",
                    }}>
                        <button
                            onClick={revealModeHandler}
                            style={{cursor: "pointer"}}
                        >
                            <img
                                src="/magic.png"
                                alt="Pause"
                                style={{width: "54px", height: "54px"}}
                            />
                        </button>
                    </div>

                    <div style={{display: "flex", alignItems: "center"}}>
                        <img
                            src="https://cdn-icons-png.flaticon.com/512/727/727269.png"
                            alt="Volume"
                            style={{width: "24px", height: "24px", marginRight: "2px"}}
                        />
                        <input
                            color="black"
                            type="range"
                            id="volume"
                            name="volume"
                            min="0.01"
                            max="1"
                            step=".025"
                            onChange={onVolumeChange}
                            defaultValue={volume}
                            style={{height: "4px", cursor: "pointer"}}
                        />
                    </div>
                </div>

                {/* Низ подчеркивание */}
                <div style={{
                    display: "flex",
                    borderBottom: "1px solid #ddd",
                    width: "100%",
                    marginTop: "4px",
                    marginLeft: "auto",
                    marginRight: "auto",
                }}></div>
            </div>
        </>
    );
}